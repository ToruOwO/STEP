//STEP-W1

#include <iostream>
#include <string>
#include <algorithm>
#include <unordered_map>
#include <utility>
#define MAXN 100000
using namespace std;


int main(){
    string c; //the given 16 characters(lowercase alphabets)
    cin >> c;
    
    sort(c.begin(), c.end());
    
    pair<string, string> word[MAXN]; //read in the words from dictionary &sort
    string ws, w;
    
    for(int i = 0; i < MAXN; i++){
        cin >> w;
        ws = w;
        sort(ws.begin(),ws.end());
        word[i].first = ws;
        word[i].second = w; //word[MAXN].first = sorted words; word[MAXN].second = originals
    }
    
    int max = 0; //max. length
    
    string longest = "0";
    
    for(int i = 0; i < MAXN; i++){ // compare word[i] with string c
        
        if(word[i].first.length() > 16) continue;
        
        int a = 0, b = 0; //position of current alphabets being compared
        bool match = true;
        while(b < word[i].first.length()){
            if(c[a] == word[i].first[b]) {a++;b++;continue;}
            else a++;
            if(a == 16) {match = false; break;}
        }
        if(match) {
            if(word[i].first.length() > max) {
                max = word[i].first.length();
                longest = word[i].second;
            }
            
        }
        
    }
    
    if (longest == "0") {
        cout << "impossible" << endl;
    }
    else cout << longest << endl;
    
    return 0;
        
}